{
	"scopeName": "template.comment.css.injection",
	"injectionSelector": "L:source.js -comment -(string -meta.embedded), L:source.ts -comment -(string -meta.embedded), L:source.tsx -comment -(string -meta.embedded)",

	"patterns": [
		{
			"comment": "Template literal CSS precedido por comentario /*css*/",
			"begin": "(/\\*css\\*/)\\s*(`)",
			"beginCaptures": {
				"1": { "name": "comment.block.js" },
				"2": {
					"name": "punctuation.definition.string.template.begin.js"
				}
			},
			"end": "`",
			"endCaptures": {
				"0": { "name": "punctuation.definition.string.template.end.js" }
			},
			"name": "string.quoted.template.css.js",
			"patterns": [
				{
					"comment": "Comentarios CSS - PRIORIDAD MÁS ALTA",
					"begin": "/\\*",
					"end": "\\*/|(?=`)",
					"name": "comment.block.css",
					"patterns": [
						{
							"comment": "Expresiones ${} en comentarios CSS",
							"begin": "(\\$\\{)",
							"beginCaptures": {
								"1": {
									"name": "punctuation.section.embedded.begin.js"
								}
							},
							"end": "(\\})|(?=`)",
							"endCaptures": {
								"1": {
									"name": "punctuation.section.embedded.end.js"
								}
							},
							"name": "source.js.embedded.expression",
							"patterns": [{ "include": "source.js" }]
						}
					]
				},
				{
					"comment": "Expresiones ${} - SEGUNDA PRIORIDAD",
					"begin": "(\\$\\{)",
					"beginCaptures": {
						"1": { "name": "punctuation.section.embedded.begin.js" }
					},
					"end": "(\\})|(?=`)",
					"endCaptures": {
						"1": { "name": "punctuation.section.embedded.end.js" }
					},
					"name": "source.js.embedded.expression",
					"patterns": [{ "include": "source.js" }]
				},
				{
					"comment": "At-rules (@media, @keyframes, etc.)",
					"begin": "(@[a-zA-Z-]+)",
					"beginCaptures": {
						"1": { "name": "keyword.control.at-rule.css" }
					},
					"end": "(?=[{;}])|(?=`)",
					"name": "meta.at-rule.css"
				},
				{
					"comment": "Bloques CSS - SIN NESTING",
					"begin": "\\{",
					"end": "\\}|(?=`)",
					"name": "meta.property-list.css",
					"patterns": [
						{
							"comment": "Comentarios dentro de bloques",
							"begin": "/\\*",
							"end": "\\*/|(?=`)",
							"name": "comment.block.css"
						},
						{
							"comment": "Expresiones ${} dentro de bloques",
							"begin": "(\\$\\{)",
							"beginCaptures": {
								"1": {
									"name": "punctuation.section.embedded.begin.js"
								}
							},
							"end": "(\\})|(?=`)",
							"endCaptures": {
								"1": {
									"name": "punctuation.section.embedded.end.js"
								}
							},
							"name": "source.js.embedded.expression",
							"patterns": [{ "include": "source.js" }]
						},
						{
							"comment": "Propiedades CSS",
							"match": "\\s*([a-zA-Z-]+)\\s*(:)",
							"captures": {
								"1": {
									"name": "support.type.property-name.css"
								},
								"2": {
									"name": "punctuation.separator.key-value.css"
								}
							}
						},
						{
							"comment": "Valores de propiedades",
							"begin": "(:)\\s*",
							"beginCaptures": {
								"1": {
									"name": "punctuation.separator.key-value.css"
								}
							},
							"end": "(;)|(?=\\})|(?=`)",
							"endCaptures": {
								"1": {
									"name": "punctuation.terminator.rule.css"
								}
							},
							"name": "meta.property-value.css",
							"patterns": [
								{
									"comment": "Comentarios en valores",
									"begin": "/\\*",
									"end": "\\*/|(?=`)",
									"name": "comment.block.css"
								},
								{
									"comment": "Expresiones ${} en valores",
									"begin": "(\\$\\{)",
									"beginCaptures": {
										"1": {
											"name": "punctuation.section.embedded.begin.js"
										}
									},
									"end": "(\\})|(?=`)",
									"endCaptures": {
										"1": {
											"name": "punctuation.section.embedded.end.js"
										}
									},
									"name": "source.js.embedded.expression",
									"patterns": [{ "include": "source.js" }]
								},
								{
									"comment": "Strings con comillas dobles",
									"begin": "\"",
									"end": "\"|(?=`)",
									"name": "string.quoted.double.css"
								},
								{
									"comment": "Strings con comillas simples",
									"begin": "'",
									"end": "'|(?=`)",
									"name": "string.quoted.single.css"
								},
								{
									"comment": "Funciones CSS",
									"match": "([a-zA-Z-]+)(\\()",
									"captures": {
										"1": {
											"name": "support.function.css"
										},
										"2": {
											"name": "punctuation.section.function.begin.css"
										}
									}
								},
								{
									"comment": "Colores hexadecimales",
									"match": "(#)([0-9a-fA-F]{3,8})\\b",
									"captures": {
										"1": {
											"name": "punctuation.definition.constant.css"
										},
										"2": {
											"name": "constant.other.color.rgb-value.css"
										}
									}
								},
								{
									"comment": "Números con unidades",
									"match": "(-?\\d*\\.\\d+|\\d+)(%|px|em|rem|vh|vw|pt|pc|in|cm|mm|ex|ch|vmin|vmax|fr|deg|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?\\b",
									"captures": {
										"1": {
											"name": "constant.numeric.css"
										},
										"2": {
											"name": "keyword.other.unit.css"
										}
									}
								},
								{
									"comment": "Palabras clave CSS",
									"match": "\\b(auto|inherit|initial|unset|none|normal|bold|italic|underline|left|right|center|top|bottom|middle|block|inline|flex|grid|absolute|relative|fixed|static|transparent|solid|dashed|dotted|double)\\b",
									"name": "support.constant.property-value.css"
								}
							]
						}
					]
				},
				{
					"comment": "Selectores CSS",
					"match": "([.#]?)([a-zA-Z0-9_-]+)",
					"captures": {
						"1": {
							"name": "punctuation.definition.entity.css"
						},
						"2": {
							"name": "entity.other.attribute-name.class.css"
						}
					}
				},
				{
					"comment": "Pseudo-clases y pseudo-elementos",
					"match": "(:+)([a-zA-Z0-9_-]+)",
					"captures": {
						"1": {
							"name": "punctuation.definition.entity.css"
						},
						"2": {
							"name": "entity.other.attribute-name.pseudo-class.css"
						}
					}
				}
			]
		}
	]
}