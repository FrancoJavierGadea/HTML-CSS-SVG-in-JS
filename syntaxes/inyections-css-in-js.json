{
	"scopeName": "template.comment.css.injection",
	"injectionSelector": "L:source.js -comment -(string -meta.embedded), L:source.ts -comment -(string -meta.embedded), L:source.tsx -comment -(string -meta.embedded)",

	"patterns": [
		{
			"comment": "Template literal CSS precedido por comentario /*css*/",
			"begin": "(/\\*css\\*/)\\s*(`)",
			"beginCaptures": {
				"1": { "name": "comment.block.js" },
				"2": {
					"name": "punctuation.definition.string.template.begin.js"
				}
			},
			"end": "`",
			"endCaptures": {
				"0": { "name": "punctuation.definition.string.template.end.js" }
			},
			"name": "string.quoted.template.css.js",
			"patterns": [
				{
					"comment": "Expresiones ${} con máxima prioridad - se aplican antes que las reglas CSS",
					"begin": "(\\$\\{)",
					"beginCaptures": {
						"1": { "name": "punctuation.section.embedded.begin.js" }
					},
					"end": "(\\})",
					"endCaptures": {
						"1": { "name": "punctuation.section.embedded.end.js" }
					},
					"name": "source.js.embedded.expression",
					"patterns": [
						{
							"comment": "Expresiones ${} anidadas",
							"begin": "(\\$\\{)",
							"beginCaptures": {
								"1": {
									"name": "punctuation.section.embedded.begin.js"
								}
							},
							"end": "(\\})",
							"endCaptures": {
								"1": {
									"name": "punctuation.section.embedded.end.js"
								}
							},
							"name": "source.js.embedded.expression",
							"patterns": [{ "include": "$self" }]
						},
						{ "include": "source.js" }
					]
				},
				{
					"comment": "CSS con patrones personalizados para manejar ${} en todas las partes",
					"patterns": [
						{
							"comment": "Comentarios CSS",
							"begin": "/\\*",
							"end": "\\*/",
							"name": "comment.block.css",
							"patterns": [
								{
									"comment": "Expresiones ${} en comentarios CSS",
									"begin": "(\\$\\{)",
									"beginCaptures": {
										"1": {
											"name": "punctuation.section.embedded.begin.js"
										}
									},
									"end": "(\\})",
									"endCaptures": {
										"1": {
											"name": "punctuation.section.embedded.end.js"
										}
									},
									"name": "source.js.embedded.expression",
									"patterns": [{ "include": "source.js" }]
								}
							]
						},
						{
							"comment": "At-rules (@media, @keyframes, etc.)",
							"begin": "(@[a-zA-Z-]+)",
							"beginCaptures": {
								"1": { "name": "keyword.control.at-rule.css" }
							},
							"end": "(?=[{;}])",
							"name": "meta.at-rule.css",
							"patterns": [
								{
									"comment": "Expresiones ${} en at-rules",
									"begin": "(\\$\\{)",
									"beginCaptures": {
										"1": {
											"name": "punctuation.section.embedded.begin.js"
										}
									},
									"end": "(\\})",
									"endCaptures": {
										"1": {
											"name": "punctuation.section.embedded.end.js"
										}
									},
									"name": "source.js.embedded.expression",
									"patterns": [{ "include": "source.js" }]
								}
							]
						},
						{
							"comment": "Selectores CSS",
							"begin": "^\\s*(?![{}@])",
							"end": "(?={)",
							"name": "meta.selector.css",
							"patterns": [
								{
									"comment": "Expresiones ${} en selectores",
									"begin": "(\\$\\{)",
									"beginCaptures": {
										"1": {
											"name": "punctuation.section.embedded.begin.js"
										}
									},
									"end": "(\\})",
									"endCaptures": {
										"1": {
											"name": "punctuation.section.embedded.end.js"
										}
									},
									"name": "source.js.embedded.expression",
									"patterns": [{ "include": "source.js" }]
								},
								{
									"comment": "Clases CSS",
									"match": "(\\.)([a-zA-Z_-][a-zA-Z0-9_-]*)",
									"captures": {
										"1": {
											"name": "punctuation.definition.entity.css"
										},
										"2": {
											"name": "entity.other.attribute-name.class.css"
										}
									}
								},
								{
									"comment": "IDs CSS",
									"match": "(#)([a-zA-Z_-][a-zA-Z0-9_-]*)",
									"captures": {
										"1": {
											"name": "punctuation.definition.entity.css"
										},
										"2": {
											"name": "entity.other.attribute-name.id.css"
										}
									}
								},
								{
									"comment": "Elementos HTML",
									"match": "\\b([a-zA-Z0-9_-]+)\\b",
									"name": "entity.name.tag.css"
								},
								{
									"comment": "Pseudo-clases y pseudo-elementos",
									"match": "(:+)([a-zA-Z0-9_-]+)",
									"captures": {
										"1": {
											"name": "punctuation.definition.entity.css"
										},
										"2": {
											"name": "entity.other.attribute-name.pseudo-class.css"
										}
									}
								}
							]
						},
						{
							"comment": "Bloques de propiedades CSS",
							"begin": "{",
							"end": "}",
							"name": "meta.property-list.css",
							"patterns": [
								{
									"comment": "Expresiones ${} en propiedades CSS - máxima prioridad",
									"begin": "(\\$\\{)",
									"beginCaptures": {
										"1": {
											"name": "punctuation.section.embedded.begin.js"
										}
									},
									"end": "(\\})",
									"endCaptures": {
										"1": {
											"name": "punctuation.section.embedded.end.js"
										}
									},
									"name": "source.js.embedded.expression",
									"patterns": [{ "include": "source.js" }]
								},
								{
									"comment": "Propiedades CSS",
									"match": "\\s*([a-zA-Z-]+)\\s*(:)",
									"captures": {
										"1": {
											"name": "support.type.property-name.css"
										},
										"2": {
											"name": "punctuation.separator.key-value.css"
										}
									}
								},
								{
									"comment": "Valores de propiedades con ${} incluido",
									"begin": "(:)\\s*",
									"beginCaptures": {
										"1": {
											"name": "punctuation.separator.key-value.css"
										}
									},
									"end": "(;|(?=}))",
									"endCaptures": {
										"1": {
											"name": "punctuation.terminator.rule.css"
										}
									},
									"name": "meta.property-value.css",
									"patterns": [
										{
											"comment": "Expresiones ${} en valores de propiedades",
											"begin": "(\\$\\{)",
											"beginCaptures": {
												"1": {
													"name": "punctuation.section.embedded.begin.js"
												}
											},
											"end": "(\\})",
											"endCaptures": {
												"1": {
													"name": "punctuation.section.embedded.end.js"
												}
											},
											"name": "source.js.embedded.expression",
											"patterns": [
												{ "include": "source.js" }
											]
										},
										{
											"comment": "Funciones CSS",
											"match": "([a-zA-Z-]+)(\\()",
											"captures": {
												"1": {
													"name": "support.function.css"
												},
												"2": {
													"name": "punctuation.section.function.begin.css"
												}
											}
										},
										{
											"comment": "Colores hexadecimales",
											"match": "(#)([0-9a-fA-F]{3,8})\\b",
											"captures": {
												"1": {
													"name": "punctuation.definition.constant.css"
												},
												"2": {
													"name": "constant.other.color.rgb-value.css"
												}
											}
										},
										{
											"comment": "Números con unidades",
											"match": "(-?\\d*\\.\\d+|\\d+)(%|px|em|rem|vh|vw|pt|pc|in|cm|mm|ex|ch|vmin|vmax|fr|deg|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?\\b",
											"captures": {
												"1": {
													"name": "constant.numeric.css"
												},
												"2": {
													"name": "keyword.other.unit.css"
												}
											}
										},
										{
											"comment": "Palabras clave CSS",
											"match": "\\b(auto|inherit|initial|unset|none|normal|bold|italic|underline|left|right|center|top|bottom|middle|block|inline|flex|grid|absolute|relative|fixed|static|transparent|solid|dashed|dotted|double)\\b",
											"name": "support.constant.property-value.css"
										},
										{
											"comment": "Strings en CSS",
											"begin": "\"",
											"end": "\"",
											"name": "string.quoted.double.css",
											"patterns": [
												{
													"comment": "Expresiones ${} en strings CSS",
													"begin": "(\\$\\{)",
													"beginCaptures": {
														"1": {
															"name": "punctuation.section.embedded.begin.js"
														}
													},
													"end": "(\\})",
													"endCaptures": {
														"1": {
															"name": "punctuation.section.embedded.end.js"
														}
													},
													"name": "source.js.embedded.expression",
													"patterns": [
														{
															"include": "source.js"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"comment": "Fallback para CSS general",
							"include": "source.css"
						}
					]
				}
			]
		}
	]
}
